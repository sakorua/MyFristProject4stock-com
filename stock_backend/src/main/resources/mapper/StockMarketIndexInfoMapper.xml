<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.stock.mapper.StockMarketIndexInfoMapper">

    <resultMap id="BaseResultMap" type="com.itheima.stock.pojo.StockMarketIndexInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="markId" column="mark_Id" jdbcType="CHAR"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
            <result property="markName" column="mark_name" jdbcType="VARCHAR"/>
            <result property="curPoint" column="cur_point" jdbcType="DECIMAL"/>
            <result property="currentPrice" column="current_price" jdbcType="DECIMAL"/>
            <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
            <result property="tradeAccount" column="trade_account" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,mark_Id,cur_time,
        mark_name,cur_point,current_price,
        updown_rate,trade_account,trade_volume
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_market_index_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_market_index_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.StockMarketIndexInfo" useGeneratedKeys="true">
        insert into stock_market_index_info
        ( id,mark_Id,cur_time
        ,mark_name,cur_point,current_price
        ,updown_rate,trade_account,trade_volume
        )
        values (#{id,jdbcType=BIGINT},#{markId,jdbcType=CHAR},#{curTime,jdbcType=TIMESTAMP}
        ,#{markName,jdbcType=VARCHAR},#{curPoint,jdbcType=DECIMAL},#{currentPrice,jdbcType=DECIMAL}
        ,#{updownRate,jdbcType=DECIMAL},#{tradeAccount,jdbcType=BIGINT},#{tradeVolume,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.itheima.stock.pojo.StockMarketIndexInfo" useGeneratedKeys="true">
        insert into stock_market_index_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="markId != null">markId,</if>
                <if test="curTime != null">curTime,</if>
                <if test="markName != null">markName,</if>
                <if test="curPoint != null">curPoint,</if>
                <if test="currentPrice != null">currentPrice,</if>
                <if test="updownRate != null">updownRate,</if>
                <if test="tradeAccount != null">tradeAccount,</if>
                <if test="tradeVolume != null">tradeVolume,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">id = #{id,jdbcType=BIGINT},</if>
                <if test="markId != null">mark_Id = #{markId,jdbcType=CHAR},</if>
                <if test="curTime != null">cur_time = #{curTime,jdbcType=TIMESTAMP},</if>
                <if test="markName != null">mark_name = #{markName,jdbcType=VARCHAR},</if>
                <if test="curPoint != null">cur_point = #{curPoint,jdbcType=DECIMAL},</if>
                <if test="currentPrice != null">current_price = #{currentPrice,jdbcType=DECIMAL},</if>
                <if test="updownRate != null">updown_rate = #{updownRate,jdbcType=DECIMAL},</if>
                <if test="tradeAccount != null">trade_account = #{tradeAccount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">trade_volume = #{tradeVolume,jdbcType=BIGINT},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.itheima.stock.pojo.StockMarketIndexInfo">
        update stock_market_index_info
        <set>
                <if test="markId != null">
                    mark_Id = #{markId,jdbcType=CHAR},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
                <if test="markName != null">
                    mark_name = #{markName,jdbcType=VARCHAR},
                </if>
                <if test="curPoint != null">
                    cur_point = #{curPoint,jdbcType=DECIMAL},
                </if>
                <if test="currentPrice != null">
                    current_price = #{currentPrice,jdbcType=DECIMAL},
                </if>
                <if test="updownRate != null">
                    updown_rate = #{updownRate,jdbcType=DECIMAL},
                </if>
                <if test="tradeAccount != null">
                    trade_account = #{tradeAccount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=BIGINT},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.itheima.stock.pojo.StockMarketIndexInfo">
        update stock_market_index_info
        set 
            mark_Id =  #{markId,jdbcType=CHAR},
            cur_time =  #{curTime,jdbcType=TIMESTAMP},
            mark_name =  #{markName,jdbcType=VARCHAR},
            cur_point =  #{curPoint,jdbcType=DECIMAL},
            current_price =  #{currentPrice,jdbcType=DECIMAL},
            updown_rate =  #{updownRate,jdbcType=DECIMAL},
            trade_account =  #{tradeAccount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=BIGINT}
        where   id = #{id,jdbcType=BIGINT} 
    </update>

    <select id="selectByIdsAndDate" resultType="com.itheima.stock.common.domain.InnerMarketDomain">
        SELECT
        tmp.mark_Id AS code,
        tmp.mark_name AS name,
        sml.pre_close_price AS preClosePrice,
        sml.open_price AS openPrice,
        tmp.current_price AS tradePrice,
        tmp.updown_rate AS upDown,
        tmp.trade_account AS tradeAmt,
        tmp.trade_volume AS tradeVol,
        DATE_FORMAT( tmp.cur_time, '%Y%m%d') AS curDate
        FROM
        (
        SELECT	* 	FROM	stock_market_index_info AS smi
        WHERE smi.cur_time =#{lastDate}
        AND smi.mark_Id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        ) AS tmp
        LEFT JOIN stock_market_log_price AS sml ON tmp.mark_Id=sml.market_code
        AND DATE_FORMAT( sml.cur_date, '%Y%m%d' )= DATE_FORMAT(#{lastDate},'%Y%m%d' )
    </select>


    <select id="stockTradeVolCount" resultType="java.util.Map">
        select
        date_format(smi.cur_time,'%Y%m%d%H%i') as time,
        sum(smi.trade_account) as count
        from
        stock_market_index_info as smi
        where
          smi.cur_time between #{openDate} and #{stockDateTime}
        and
        smi.mark_Id in
        <foreach collection="marketIds" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        group by time
    </select>
    <select id="selectByIdsAndDate4outer" resultType="java.util.Map">
        SELECT smi.cur_point                       AS curPoint,
        DATE_FORMAT(smi.cur_time, '%Y%m%d') AS curTime,
        smi.mark_name                       AS name,
        smi.current_price                   AS tradePrice,
        smi.updown_rate                     AS updownRate
        FROM stock_market_index_info AS smi
        WHERE DATE_FORMAT(smi.cur_time, '%Y%m%d') = DATE_FORMAT(#{lastDate}, '%Y%m%d')
        AND smi.mark_Id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        order by curTime DESC, curPoint DESC
        limit 4
    </select>

    <insert id="insertBatch">
        insert into stock_market_index_info values
        <foreach collection="list" item="smi" separator=",">
            (#{smi.id},#{smi.markId},#{smi.curTime},#{smi.markName},#{smi.curPoint},#{smi.currentPrice}
            ,#{smi.updownRate},#{smi.tradeAccount},#{smi.tradeVolume})
        </foreach>
    </insert>
</mapper>
